/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../../../@account-abstraction/contracts/core/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052604051620000129062000055565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b50600160025562000063565b610233806200500783390190565b608051614f8162000086600039600081816117390152613a880152614f816000f3fe6080604052600436106101635760003560e01c80638f41ec5a116100c0578063bb9fe6bf11610074578063d6383f9411610059578063d6383f94146104f5578063ee21942314610515578063fc7e286d1461053557600080fd5b8063bb9fe6bf146104c0578063c23a5cea146104d557600080fd5b80639b249f69116100a55780639b249f691461046d578063a61935311461048d578063b760faf9146104ad57600080fd5b80638f41ec5a14610438578063957122ab1461044d57600080fd5b8063205c2878116101175780634b1d7cf5116100fc5780634b1d7cf5146102765780635287ce121461029657806370a08231146103e557600080fd5b8063205c28781461023657806335567e1a1461025657600080fd5b80631b2e01b8116101485780631b2e01b8146101ab5780631d732756146101f65780631fad948c1461021657600080fd5b80630396cb60146101785780630bd28e3b1461018b57600080fd5b36610173576101713361060f565b005b600080fd5b610171610186366004613e0e565b61068a565b34801561019757600080fd5b506101716101a6366004613e61565b610a0d565b3480156101b757600080fd5b506101e36101c6366004613ea9565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561020257600080fd5b506101e36102113660046140fd565b610a55565b34801561022257600080fd5b50610171610231366004614208565b610c08565b34801561024257600080fd5b5061017161025136600461425f565b610de7565b34801561026257600080fd5b506101e3610271366004613ea9565b610fe9565b34801561028257600080fd5b50610171610291366004614208565b611064565b3480156102a257600080fd5b506103866102b136600461428b565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091525073ffffffffffffffffffffffffffffffffffffffff1660009081526020818152604091829020825160a08101845281546dffffffffffffffffffffffffffff80821683526e010000000000000000000000000000820460ff161515948301949094526f0100000000000000000000000000000090049092169282019290925260019091015463ffffffff81166060830152640100000000900465ffffffffffff16608082015290565b6040805182516dffffffffffffffffffffffffffff908116825260208085015115159083015283830151169181019190915260608083015163ffffffff169082015260809182015165ffffffffffff169181019190915260a0016101ed565b3480156103f157600080fd5b506101e361040036600461428b565b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020546dffffffffffffffffffffffffffff1690565b34801561044457600080fd5b506101e3600181565b34801561045957600080fd5b506101716104683660046142a8565b6115a1565b34801561047957600080fd5b5061017161048836600461432d565b6116f9565b34801561049957600080fd5b506101e36104a8366004614388565b611800565b6101716104bb36600461428b565b61060f565b3480156104cc57600080fd5b50610171611842565b3480156104e157600080fd5b506101716104f036600461428b565b6119f9565b34801561050157600080fd5b506101716105103660046143bd565b611cf9565b34801561052157600080fd5b50610171610530366004614388565b611e27565b34801561054157600080fd5b506105c261055036600461428b565b600060208190529081526040902080546001909101546dffffffffffffffffffffffffffff808316926e010000000000000000000000000000810460ff16926f010000000000000000000000000000009091049091169063ffffffff811690640100000000900465ffffffffffff1685565b604080516dffffffffffffffffffffffffffff96871681529415156020860152929094169183019190915263ffffffff16606082015265ffffffffffff909116608082015260a0016101ed565b610619813461218f565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020818152604091829020805492516dffffffffffffffffffffffffffff909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff821661070b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064015b60405180910390fd5b600181015463ffffffff9081169083161015610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606401610702565b80546000906107b69034906f0100000000000000000000000000000090046dffffffffffffffffffffffffffff1661444e565b905060008111610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152606401610702565b6dffffffffffffffffffffffffffff81111561089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152606401610702565b6040805160a08101825283546dffffffffffffffffffffffffffff90811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a9020985189549551945189166f01000000000000000000000000000000027fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff9515156e010000000000000000000000000000027fffffffffffffffffffffffffffffffffff0000000000000000000000000000009097169190991617949094179290921695909517865551949092018054925165ffffffffffff16640100000000027fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0190610a00908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b33600090815260016020908152604080832077ffffffffffffffffffffffffffffffffffffffffffffffff851684529091528120805491610a4d83614461565b919050555050565b6000805a9050333014610ac4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152606401610702565b8451604081015160608201518101611388015a1015610b07577fdeaddead0000000000000000000000000000000000000000000000000000000060005260206000fd5b875160009015610ba8576000610b24846000015160008c8661228c565b905080610ba6576000610b386108006122a4565b805190915015610ba057846000015173ffffffffffffffffffffffffffffffffffffffff168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201876020015184604051610b97929190614507565b60405180910390a35b60019250505b505b600088608001515a8603019050610bfa6000838b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506122d0915050565b9a9950505050505050505050565b6002805403610c73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610702565b600280558160008167ffffffffffffffff811115610c9357610c93613ede565b604051908082528060200260200182016040528015610ccc57816020015b610cb9613d6a565b815260200190600190039081610cb15790505b50905060005b82811015610d45576000828281518110610cee57610cee614520565b60200260200101519050600080610d29848a8a87818110610d1157610d11614520565b9050602002810190610d23919061454f565b856126ae565b91509150610d3a84838360006128f2565b505050600101610cd2565b506040516000907fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972908290a160005b83811015610dcf57610dc381888884818110610d9257610d92614520565b9050602002810190610da4919061454f565b858481518110610db657610db6614520565b6020026020010151612b47565b90910190600101610d74565b50610dda8482612ccc565b5050600160025550505050565b33600090815260208190526040902080546dffffffffffffffffffffffffffff16821115610e71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606401610702565b8054610e8e9083906dffffffffffffffffffffffffffff1661458d565b81547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000166dffffffffffffffffffffffffffff919091161781556040805173ffffffffffffffffffffffffffffffffffffffff851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a260008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d8060008114610f73576040519150601f19603f3d011682016040523d82523d6000602084013e610f78565b606091505b5050905080610fe3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152606401610702565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020908152604080832077ffffffffffffffffffffffffffffffffffffffffffffffff8516845290915290819020549082901b7fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016175b92915050565b60028054036110cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610702565b60028055816000805b828110156112cc57368686838181106110f3576110f3614520565b905060200281019061110591906145a0565b905036600061111483806145d4565b9092509050600061112b604085016020860161428b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff8216016111cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152606401610702565b73ffffffffffffffffffffffffffffffffffffffff8116156112a95773ffffffffffffffffffffffffffffffffffffffff811663e3563a4f8484611213604089018961463c565b6040518563ffffffff1660e01b81526004016112329493929190614852565b60006040518083038186803b15801561124a57600080fd5b505afa92505050801561125b575060015b6112a9576040517f86a9f75000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610702565b6112b3828761444e565b95505050505080806112c490614461565b9150506110d8565b5060008167ffffffffffffffff8111156112e8576112e8613ede565b60405190808252806020026020018201604052801561132157816020015b61130e613d6a565b8152602001906001900390816113065790505b506040519091507fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f97290600090a16000805b84811015611436573688888381811061136d5761136d614520565b905060200281019061137f91906145a0565b905036600061138e83806145d4565b909250905060006113a5604085016020860161428b565b90508160005b8181101561141d5760008989815181106113c7576113c7614520565b602002602001015190506000806113ea8b898987818110610d1157610d11614520565b915091506113fa848383896128f2565b8a61140481614461565b9b5050505050808061141590614461565b9150506113ab565b505050505050808061142e90614461565b915050611352565b50600080915060005b8581101561155c573689898381811061145a5761145a614520565b905060200281019061146c91906145a0565b905061147e604082016020830161428b565b73ffffffffffffffffffffffffffffffffffffffff167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d60405160405180910390a23660006114cd83806145d4565b90925090508060005b8181101561154457611518888585848181106114f4576114f4614520565b9050602002810190611506919061454f565b8b8b81518110610db657610db6614520565b611522908861444e565b96508761152e81614461565b985050808061153c90614461565b9150506114d6565b5050505050808061155490614461565b91505061143f565b506040516000907f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d908290a26115928682612ccc565b50506001600255505050505050565b831580156115c4575073ffffffffffffffffffffffffffffffffffffffff83163b155b1561162b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f41413230206163636f756e74206e6f74206465706c6f796564000000000000006044820152606401610702565b601481106116bd5760006116426014828486614909565b61164b91614933565b60601c9050803b6000036116bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f41413330207061796d6173746572206e6f74206465706c6f79656400000000006044820152606401610702565b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260006024820152604401610702565b6040517f570e1a3600000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063570e1a3690611770908690869060040161497b565b6020604051808303816000875af115801561178f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b3919061498f565b6040517f6ca7b80600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152909150602401610702565b600061180b82612e18565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b3360009081526020819052604081206001810154909163ffffffff90911690036118c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152606401610702565b80546e010000000000000000000000000000900460ff16611945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152606401610702565b600181015460009061195d9063ffffffff16426149ac565b6001830180547fffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff1664010000000065ffffffffffff84169081029190911790915583547fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff16845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a9060200161067e565b33600090815260208190526040902080546f0100000000000000000000000000000090046dffffffffffffffffffffffffffff1680611a94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152606401610702565b6001820154640100000000900465ffffffffffff16611b0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606401610702565b60018201544264010000000090910465ffffffffffff161115611b8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606401610702565b6001820180547fffffffffffffffffffffffffffffffffffffffffffff0000000000000000000016905581547fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff1682556040805173ffffffffffffffffffffffffffffffffffffffff851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a260008373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611c89576040519150601f19603f3d011682016040523d82523d6000602084013e611c8e565b606091505b5050905080610fe3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606401610702565b611d01613d6a565b611d0a85612e31565b600080611d19600088856126ae565b915091506000611d298383612f24565b9050611d3443600052565b6000611d4260008a87612b47565b9050611d4d43600052565b6000606073ffffffffffffffffffffffffffffffffffffffff8a1615611ddd578973ffffffffffffffffffffffffffffffffffffffff168989604051611d949291906149d2565b6000604051808303816000865af19150503d8060008114611dd1576040519150601f19603f3d011682016040523d82523d6000602084013e611dd6565b606091505b5090925090505b8660800151838560200151866040015185856040517f8b7ac980000000000000000000000000000000000000000000000000000000008152600401610702969594939291906149e2565b611e2f613d6a565b611e3882612e31565b600080611e47600085856126ae565b845160a001516040805180820182526000808252602080830182815273ffffffffffffffffffffffffffffffffffffffff958616835282825284832080546dffffffffffffffffffffffffffff6f01000000000000000000000000000000918290048116875260019283015463ffffffff9081169094528d51518851808a018a5287815280870188815291909a16875286865288872080549390930490911689529101549091169052835180850190945281845283015293955091935090366000611f1560408a018a61463c565b909250905060006014821015611f2c576000611f47565b611f3a601460008486614909565b611f4391614933565b60601c5b6040805180820182526000808252602080830182815273ffffffffffffffffffffffffffffffffffffffff861683529082905292902080546f0100000000000000000000000000000090046dffffffffffffffffffffffffffff1682526001015463ffffffff1690915290915093505050506000611fc58686612f24565b90506000816000015190506000600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905060006040518060c001604052808b6080015181526020018b6040015181526020018315158152602001856020015165ffffffffffff168152602001856040015165ffffffffffff16815260200161205c8c6060015190565b9052905073ffffffffffffffffffffffffffffffffffffffff83161580159061209c575073ffffffffffffffffffffffffffffffffffffffff8316600114155b156121555760408051808201825273ffffffffffffffffffffffffffffffffffffffff851680825282518084018452600080825260208083018281529382528181529085902080546f0100000000000000000000000000000090046dffffffffffffffffffffffffffff1683526001015463ffffffff169092529082015290517ffaecb4e4000000000000000000000000000000000000000000000000000000008152610702908390899089908c908690600401614a84565b808686896040517fe0cff05f0000000000000000000000000000000000000000000000000000000081526004016107029493929190614b11565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040812080549091906121d49084906dffffffffffffffffffffffffffff1661444e565b90506dffffffffffffffffffffffffffff81111561224e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6465706f736974206f766572666c6f77000000000000000000000000000000006044820152606401610702565b81547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000166dffffffffffffffffffffffffffff919091161790555050565b6000806000845160208601878987f195945050505050565b60603d828111156122b25750815b604051602082018101604052818152816000602083013e9392505050565b6000805a8551909150600090816122e68261300a565b60a083015190915073ffffffffffffffffffffffffffffffffffffffff81166123125782519350612560565b80935060008851111561256057868202955060028a600281111561233857612338614b68565b146123d05760608301516040517fa9a2340900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169163a9a2340991612398908e908d908c90600401614b97565b600060405180830381600088803b1580156123b257600080fd5b5087f11580156123c6573d6000803e3d6000fd5b5050505050612560565b60608301516040517fa9a2340900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169163a9a234099161242b908e908d908c90600401614b97565b600060405180830381600088803b15801561244557600080fd5b5087f193505050508015612457575060015b61256057612463614bf7565b806308c379a0036124f35750612477614c13565b8061248257506124f5565b8b816040516020016124949190614cbb565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f220266b60000000000000000000000000000000000000000000000000000000082526107029291600401614507565b505b8a6040517f220266b60000000000000000000000000000000000000000000000000000000081526004016107029181526040602082018190526012908201527f4141353020706f73744f70207265766572740000000000000000000000000000606082015260800190565b5a850387019650818702955085896040015110156125e2578a6040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070291815260406020808301829052908201527f414135312070726566756e642062656c6f772061637475616c476173436f7374606082015260800190565b60408901518690036125f4858261218f565b6000808c600281111561260957612609614b68565b1490508460a0015173ffffffffffffffffffffffffffffffffffffffff16856000015173ffffffffffffffffffffffffffffffffffffffff168c602001517f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f8860200151858d8f604051612696949392919093845291151560208401526040830152606082015260800190565b60405180910390a45050505050505095945050505050565b60008060005a84519091506126c3868261303a565b6126cc86611800565b6020860152604081015160608201516080830151171760e087013517610100870135176effffffffffffffffffffffffffffff811115612768576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152606401610702565b6000806127748461315a565b90506127828a8a8a846131b4565b8551602087015191995091935061279991906134ca565b61280857896040517f220266b6000000000000000000000000000000000000000000000000000000008152600401610702918152604060208201819052601a908201527f4141323520696e76616c6964206163636f756e74206e6f6e6365000000000000606082015260800190565b61281143600052565b60a084015160609073ffffffffffffffffffffffffffffffffffffffff1615612846576128418b8b8b8587613525565b975090505b60005a87039050808b60a0013510156128c4578b6040517f220266b6000000000000000000000000000000000000000000000000000000008152600401610702918152604060208201819052601e908201527f41413430206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b60408a018390528160608b015260c08b01355a8803018a608001818152505050505050505050935093915050565b6000806128fe856137e8565b915091508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146129a057856040517f220266b60000000000000000000000000000000000000000000000000000000081526004016107029181526040602082018190526014908201527f41413234207369676e6174757265206572726f72000000000000000000000000606082015260800190565b8015612a1157856040517f220266b60000000000000000000000000000000000000000000000000000000081526004016107029181526040602082018190526017908201527f414132322065787069726564206f72206e6f7420647565000000000000000000606082015260800190565b6000612a1c856137e8565b9250905073ffffffffffffffffffffffffffffffffffffffff811615612aa757866040517f220266b60000000000000000000000000000000000000000000000000000000081526004016107029181526040602082018190526014908201527f41413334207369676e6174757265206572726f72000000000000000000000000606082015260800190565b8115612b3e57866040517f220266b60000000000000000000000000000000000000000000000000000000081526004016107029181526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560608201527f6500000000000000000000000000000000000000000000000000000000000000608082015260a00190565b50505050505050565b6000805a90506000612b5a846060015190565b905030631d732756612b6f606088018861463c565b87856040518563ffffffff1660e01b8152600401612b909493929190614d00565b6020604051808303816000875af1925050508015612be9575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252612be691810190614dc1565b60015b612cc057600060206000803e506000517f21522153000000000000000000000000000000000000000000000000000000008101612c8b57866040517f220266b6000000000000000000000000000000000000000000000000000000008152600401610702918152604060208201819052600f908201527f41413935206f7574206f66206761730000000000000000000000000000000000606082015260800190565b600085608001515a612c9d908661458d565b612ca7919061444e565b9050612cb78860028886856122d0565b94505050612cc3565b92505b50509392505050565b73ffffffffffffffffffffffffffffffffffffffff8216612d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606401610702565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114612da3576040519150601f19603f3d011682016040523d82523d6000602084013e612da8565b606091505b5050905080612e13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606401610702565b505050565b6000612e238261383b565b805190602001209050919050565b3063957122ab612e44604084018461463c565b612e51602086018661428b565b612e5f61012087018761463c565b6040518663ffffffff1660e01b8152600401612e7f959493929190614dda565b60006040518083038186803b158015612e9757600080fd5b505afa925050508015612ea8575060015b612f2157612eb4614bf7565b806308c379a003612f155750612ec8614c13565b80612ed35750612f17565b805115612f11576000816040517f220266b6000000000000000000000000000000000000000000000000000000008152600401610702929190614507565b5050565b505b3d6000803e3d6000fd5b50565b6040805160608101825260008082526020820181905291810182905290612f4a8461391b565b90506000612f578461391b565b825190915073ffffffffffffffffffffffffffffffffffffffff8116612f7b575080515b602080840151604080860151928501519085015191929165ffffffffffff8083169085161015612fa9578193505b8065ffffffffffff168365ffffffffffff161115612fc5578092505b50506040805160608101825273ffffffffffffffffffffffffffffffffffffffff909416845265ffffffffffff92831660208501529116908201529250505092915050565b60c081015160e082015160009190808203613026575092915050565b61303282488301613999565b949350505050565b613047602083018361428b565b73ffffffffffffffffffffffffffffffffffffffff16815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e08084013591830191909152610100830135908201523660006130b361012085018561463c565b9092509050801561314d576014811015613129576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606401610702565b613137601460008385614909565b61314091614933565b60601c60a0840152610fe3565b600060a084015250505050565b60a0810151600090819073ffffffffffffffffffffffffffffffffffffffff16613185576001613188565b60035b60ff16905060008360800151828560600151028560400151010190508360c00151810292505050919050565b60008060005a85518051919250906131d989886131d460408c018c61463c565b6139b1565b60a08201516131e743600052565b600073ffffffffffffffffffffffffffffffffffffffff82166132505773ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546dffffffffffffffffffffffffffff168881116132495780890361324c565b60005b9150505b606084015160208a01516040517f3a871cdd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861692633a871cdd9290916132b0918f918790600401614e1d565b60206040518083038160008887f19350505050801561330a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261330791810190614dc1565b60015b6133b457613316614bf7565b806308c379a003613347575061332a614c13565b806133355750613349565b8b816040516020016124949190614e42565b505b8a6040517f220266b60000000000000000000000000000000000000000000000000000000081526004016107029181526040602082018190526016908201527f4141323320726576657274656420286f72204f4f472900000000000000000000606082015260800190565b955073ffffffffffffffffffffffffffffffffffffffff82166134b75773ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902080546dffffffffffffffffffffffffffff16808a111561347b578c6040517f220266b60000000000000000000000000000000000000000000000000000000081526004016107029181526040602082018190526017908201527f41413231206469646e2774207061792070726566756e64000000000000000000606082015260800190565b81547fffffffffffffffffffffffffffffffffffff000000000000000000000000000016908a90036dffffffffffffffffffffffffffff161790555b5a85039650505050505094509492505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020908152604080832084821c808552925282208054849167ffffffffffffffff831691908561351783614461565b909155501495945050505050565b8251606081810151909160009184811161359b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152606401610702565b60a082015173ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040902080548784039291906dffffffffffffffffffffffffffff1689811015613650578c6040517f220266b6000000000000000000000000000000000000000000000000000000008152600401610702918152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b8981038260000160006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1663f465c77e858e8e602001518e6040518563ffffffff1660e01b81526004016136cb93929190614e1d565b60006040518083038160008887f19350505050801561372a57506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526137279190810190614e87565b60015b6137d457613736614bf7565b806308c379a003613767575061374a614c13565b806137555750613769565b8d816040516020016124949190614f13565b505b8c6040517f220266b60000000000000000000000000000000000000000000000000000000081526004016107029181526040602082018190526016908201527f4141333320726576657274656420286f72204f4f472900000000000000000000606082015260800190565b909e909d509b505050505050505050505050565b600080826000036137fe57506000928392509050565b60006138098461391b565b9050806040015165ffffffffffff164211806138305750806020015165ffffffffffff1642105b905194909350915050565b606081356020830135600061385b613856604087018761463c565b613d57565b9050600061386f613856606088018861463c565b9050608086013560a087013560c088013560e08901356101008a0135600061389e6138566101208e018e61463c565b6040805173ffffffffffffffffffffffffffffffffffffffff9c909c1660208d01528b81019a909a5260608b019890985250608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408084019190915281518084039091018152610160909201905292915050565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff8116600003613957575065ffffffffffff5b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff909316835260d09490941c602083015265ffffffffffff16928101929092525090565b60008183106139a857816139aa565b825b9392505050565b8015610fe35782515173ffffffffffffffffffffffffffffffffffffffff81163b15613a4257846040517f220266b6000000000000000000000000000000000000000000000000000000008152600401610702918152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b8351606001516040517f570e1a3600000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163570e1a369190613ac0908890889060040161497b565b60206040518083038160008887f1158015613adf573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190613b04919061498f565b905073ffffffffffffffffffffffffffffffffffffffff8116613b8c57856040517f220266b6000000000000000000000000000000000000000000000000000000008152600401610702918152604060208201819052601b908201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000606082015260800190565b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614613c2957856040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070291815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b8073ffffffffffffffffffffffffffffffffffffffff163b600003613cb257856040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070291815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b6000613cc16014828688614909565b613cca91614933565b60601c90508273ffffffffffffffffffffffffffffffffffffffff1686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160a00151604051613d4692919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b60405180910390a350505050505050565b6000604051828085833790209392505050565b6040518060a00160405280613de9604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b600060208284031215613e2057600080fd5b813563ffffffff811681146139aa57600080fd5b803577ffffffffffffffffffffffffffffffffffffffffffffffff81168114613e5c57600080fd5b919050565b600060208284031215613e7357600080fd5b6139aa82613e34565b73ffffffffffffffffffffffffffffffffffffffff81168114612f2157600080fd5b8035613e5c81613e7c565b60008060408385031215613ebc57600080fd5b8235613ec781613e7c565b9150613ed560208401613e34565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810181811067ffffffffffffffff82111715613f2d57613f2d613ede565b60405250565b610100810181811067ffffffffffffffff82111715613f2d57613f2d613ede565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715613f9857613f98613ede565b6040525050565b600067ffffffffffffffff821115613fb957613fb9613ede565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000818303610180811215613ff957600080fd5b60405161400581613f0d565b8092506101008083121561401857600080fd5b604051925061402683613f33565b61402f85613e9e565b83526020850135602084015260408501356040840152606085013560608401526080850135608084015261406560a08601613e9e565b60a084015260c085013560c084015260e085013560e084015282825280850135602083015250610120840135604082015261014084013560608201526101608401356080820152505092915050565b60008083601f8401126140c657600080fd5b50813567ffffffffffffffff8111156140de57600080fd5b6020830191508360208285010111156140f657600080fd5b9250929050565b6000806000806101c0858703121561411457600080fd5b843567ffffffffffffffff8082111561412c57600080fd5b818701915087601f83011261414057600080fd5b813561414b81613f9f565b6040516141588282613f54565b8281528a602084870101111561416d57600080fd5b826020860160208301376000602084830101528098505050506141938860208901613fe5565b94506101a08701359150808211156141aa57600080fd5b506141b7878288016140b4565b95989497509550505050565b60008083601f8401126141d557600080fd5b50813567ffffffffffffffff8111156141ed57600080fd5b6020830191508360208260051b85010111156140f657600080fd5b60008060006040848603121561421d57600080fd5b833567ffffffffffffffff81111561423457600080fd5b614240868287016141c3565b909450925050602084013561425481613e7c565b809150509250925092565b6000806040838503121561427257600080fd5b823561427d81613e7c565b946020939093013593505050565b60006020828403121561429d57600080fd5b81356139aa81613e7c565b6000806000806000606086880312156142c057600080fd5b853567ffffffffffffffff808211156142d857600080fd5b6142e489838a016140b4565b9097509550602088013591506142f982613e7c565b9093506040870135908082111561430f57600080fd5b5061431c888289016140b4565b969995985093965092949392505050565b6000806020838503121561434057600080fd5b823567ffffffffffffffff81111561435757600080fd5b614363858286016140b4565b90969095509350505050565b6000610160828403121561438257600080fd5b50919050565b60006020828403121561439a57600080fd5b813567ffffffffffffffff8111156143b157600080fd5b6130328482850161436f565b600080600080606085870312156143d357600080fd5b843567ffffffffffffffff808211156143eb57600080fd5b6143f78883890161436f565b95506020870135915061440982613e7c565b909350604086013590808211156141aa57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561105e5761105e61441f565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036144925761449261441f565b5060010190565b60005b838110156144b457818101518382015260200161449c565b50506000910152565b600081518084526144d5816020860160208601614499565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b82815260406020820152600061303260408301846144bd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea183360301811261458357600080fd5b9190910192915050565b8181038181111561105e5761105e61441f565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261458357600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261460957600080fd5b83018035915067ffffffffffffffff82111561462457600080fd5b6020019150600581901b36038213156140f657600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261467157600080fd5b83018035915067ffffffffffffffff82111561468c57600080fd5b6020019150368190038213156140f657600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126146d657600080fd5b830160208101925035905067ffffffffffffffff8111156146f657600080fd5b8036038213156140f657600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600061016061477a8461476085613e9e565b73ffffffffffffffffffffffffffffffffffffffff169052565b6020830135602085015261479160408401846146a1565b8260408701526147a48387018284614705565b925050506147b560608401846146a1565b85830360608701526147c8838284614705565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e085015261010080840135818601525061012061480f818501856146a1565b86840383880152614821848284614705565b9350505050610140614835818501856146a1565b86840383880152614847848284614705565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b898110156148f2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087860301845282357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea18c36030181126148d0578283fd5b6148dc868d830161474e565b9550506020938401939290920191600101614870565b505050508281036020840152614847818587614705565b6000808585111561491957600080fd5b8386111561492657600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156149735780818660140360031b1b83161692505b505092915050565b602081526000613032602083018486614705565b6000602082840312156149a157600080fd5b81516139aa81613e7c565b65ffffffffffff8181168382160190808211156149cb576149cb61441f565b5092915050565b8183823760009101908152919050565b868152856020820152600065ffffffffffff8087166040840152808616606084015250831515608083015260c060a0830152614a2160c08301846144bd565b98975050505050505050565b80518252602081015160208301526040810151151560408301526000606082015165ffffffffffff8082166060860152806080850151166080860152505060a082015160c060a085015261303260c08501826144bd565b6000610140808352614a9881840189614a2d565b915050614ab2602083018780518252602090810151910152565b845160608301526020948501516080830152835160a08301529284015160c0820152815173ffffffffffffffffffffffffffffffffffffffff1660e0820152908301518051610100830152909201516101209092019190915292915050565b60e081526000614b2460e0830187614a2d565b9050614b3d602083018680518252602090810151910152565b8351606083015260208401516080830152825160a0830152602083015160c083015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060038510614bd0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84825260606020830152614be760608301856144bd565b9050826040830152949350505050565b600060033d1115614c105760046000803e5060005160e01c5b90565b600060443d1015614c215790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff8160248401118184111715614c6f57505050505090565b8285019150815181811115614c875750505050505090565b843d8701016020828501011115614ca15750505050505090565b614cb060208286010187613f54565b509095945050505050565b7f4141353020706f73744f702072657665727465643a2000000000000000000000815260008251614cf3816016850160208701614499565b9190910160160192915050565b60006101c0808352614d158184018789614705565b9050845173ffffffffffffffffffffffffffffffffffffffff808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a084015261484781856144bd565b600060208284031215614dd357600080fd5b5051919050565b606081526000614dee606083018789614705565b73ffffffffffffffffffffffffffffffffffffffff861660208401528281036040840152614a21818587614705565b606081526000614e30606083018661474e565b60208301949094525060400152919050565b7f414132332072657665727465643a200000000000000000000000000000000000815260008251614e7a81600f850160208701614499565b91909101600f0192915050565b60008060408385031215614e9a57600080fd5b825167ffffffffffffffff811115614eb157600080fd5b8301601f81018513614ec257600080fd5b8051614ecd81613f9f565b604051614eda8282613f54565b828152876020848601011115614eef57600080fd5b614f00836020830160208701614499565b6020969096015195979596505050505050565b7f414133332072657665727465643a200000000000000000000000000000000000815260008251614e7a81600f85016020870161449956fea2646970667358221220d9fcee9c36f9f6f89e76947f6b7f2ed5414fd14ddf72efaf99a05c3ddc79831f64736f6c63430008130033608060405234801561001057600080fd5b50610213806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100f9565b61006c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60008061007c601482858761016b565b61008591610195565b60601c90506000610099846014818861016b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100f057600093505b50505092915050565b6000806020838503121561010c57600080fd5b823567ffffffffffffffff8082111561012457600080fd5b818501915085601f83011261013857600080fd5b81358181111561014757600080fd5b86602082850101111561015957600080fd5b60209290920196919550909350505050565b6000808585111561017b57600080fd5b8386111561018857600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156101d55780818660140360031b1b83161692505b50509291505056fea2646970667358221220aa1ec355abcdc3c5426c4e6bb4488418b6c42248946f9c6c580098cfe4a054e864736f6c63430008130033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EntryPoint & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EntryPoint__factory {
    return super.connect(runner) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new Interface(_abi) as EntryPointInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EntryPoint {
    return new Contract(address, _abi, runner) as unknown as EntryPoint;
  }
}
